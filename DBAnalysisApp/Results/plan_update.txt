Plan hash value: 2910949856
 
-------------------------------------------------------------------
| Id  | Operation                    | Name          | Cost (%CPU)|
-------------------------------------------------------------------
|   0 | INSERT STATEMENT             |               |  1180   (2)|
|   1 |  LOAD TABLE CONVENTIONAL     | EMPLOYEES     |            |
|   2 |   SORT AGGREGATE             |               |            |
|   3 |    TABLE ACCESS FULL         | EMPLOYEES     |     5   (0)|
|*  4 |   HASH JOIN                  |               |  1175   (2)|
|   5 |    VIEW                      |               |  1170   (2)|
|   6 |     SORT ORDER BY            |               |  1170   (2)|
|*  7 |      VIEW                    |               |  1169   (1)|
|*  8 |       WINDOW SORT PUSHED RANK|               |  1169   (1)|
|*  9 |        FILTER                |               |            |
|  10 |         HASH GROUP BY        |               |  1169   (1)|
|* 11 |          HASH JOIN           |               |  1164   (1)|
|  12 |           TABLE ACCESS FULL  | WOOD_TYPES    |     3   (0)|
|* 13 |           HASH JOIN          |               |  1161   (1)|
|* 14 |            HASH JOIN         |               |   713   (1)|
|* 15 |             TABLE ACCESS FULL| CLIENTS       |    30   (0)|
|  16 |             TABLE ACCESS FULL| ORDERS        |   683   (1)|
|  17 |            TABLE ACCESS FULL | ORDER_DETAILS |   446   (1)|
|  18 |    TABLE ACCESS FULL         | EMPLOYEES     |     5   (0)|
-------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   4 - access("E"."EMPLOYEE_ID"="S"."SELLER_ID")
   7 - filter("from$_subquery$_010"."rowlimit_$$_rownumber"<=20)
   8 - filter(ROW_NUMBER() OVER ( ORDER BY SUM(CASE  WHEN 
              ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1)),'fmmm') AND 
              "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) THEN 
              ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) ELSE 0 
              END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1
              )),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) 
              THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) 
              ELSE 0 END )/(SUM(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE
              @!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2
              )))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),
              1) ELSE 0 END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYS
              DATE@!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!
              ,(-2)))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE
              ")),1) ELSE 0 END )) DESC )<=20)
   9 - filter(CASE  WHEN SUM(CASE  WHEN 
              ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-2)),'fmmm') AND 
              "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2)))) THEN 
              ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) ELSE 0 
              END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-2
              )),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2)))) 
              THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) 
              ELSE 0 END )=0 THEN 0 ELSE SUM(CASE  WHEN 
              ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1)),'fmmm') AND 
              "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) THEN 
              ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) ELSE 0 
              END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1
              )),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) 
              THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) 
              ELSE 0 END )/(SUM(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE
              @!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2
              )))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),
              1) ELSE 0 END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYS
              DATE@!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!
              ,(-2)))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE
              ")),1) ELSE 0 END )) END >0)
  11 - access("OD"."WOOD_TYPE_ID"="WT"."WOOD_TYPE_ID")
  13 - access("O"."ORDER_ID"="OD"."ORDER_ID")
  14 - access("O"."CLIENT_ID"="C"."CLIENT_ID")
  15 - filter("C"."CLIENT_TYPE"='MEDIUM BUSINESS')
Plan hash value: 2951733334
 
------------------------------------------------------------------
| Id  | Operation                   | Name          | Cost (%CPU)|
------------------------------------------------------------------
|   0 | UPDATE STATEMENT            |               |  1174   (1)|
|   1 |  UPDATE                     | EMPLOYEES     |            |
|*  2 |   HASH JOIN RIGHT SEMI      |               |  1174   (1)|
|   3 |    VIEW                     | VW_NSO_1      |  1169   (1)|
|*  4 |     VIEW                    |               |  1169   (1)|
|*  5 |      WINDOW SORT PUSHED RANK|               |  1169   (1)|
|*  6 |       FILTER                |               |            |
|   7 |        HASH GROUP BY        |               |  1169   (1)|
|*  8 |         HASH JOIN           |               |  1164   (1)|
|   9 |          TABLE ACCESS FULL  | WOOD_TYPES    |     3   (0)|
|* 10 |          HASH JOIN          |               |  1161   (1)|
|* 11 |           HASH JOIN         |               |   713   (1)|
|* 12 |            TABLE ACCESS FULL| CLIENTS       |    30   (0)|
|  13 |            TABLE ACCESS FULL| ORDERS        |   683   (1)|
|  14 |           TABLE ACCESS FULL | ORDER_DETAILS |   446   (1)|
|  15 |    TABLE ACCESS FULL        | EMPLOYEES     |     5   (0)|
------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   2 - access("EMPLOYEE_ID"="SELLER_ID")
   4 - filter("from$_subquery$_007"."rowlimit_$$_rownumber"<=20)
   5 - filter(ROW_NUMBER() OVER ( ORDER BY SUM(CASE  WHEN 
              ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1)),'fmmm') AND 
              "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) THEN 
              ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) ELSE 0 
              END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1
              )),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) 
              THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) 
              ELSE 0 END )/(SUM(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE
              @!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2
              )))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),
              1) ELSE 0 END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYS
              DATE@!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!
              ,(-2)))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE
              ")),1) ELSE 0 END )) DESC )<=20)
   6 - filter(CASE  WHEN SUM(CASE  WHEN 
              ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-2)),'fmmm') AND 
              "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2)))) THEN 
              ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) ELSE 0 
              END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-2
              )),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2)))) 
              THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) 
              ELSE 0 END )=0 THEN 0 ELSE SUM(CASE  WHEN 
              ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1)),'fmmm') AND 
              "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) THEN 
              ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) ELSE 0 
              END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE@!,(-1
              )),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-1)))) 
              THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),1) 
              ELSE 0 END )/(SUM(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYSDATE
              @!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!,(-2
              )))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE")),
              1) ELSE 0 END )/COUNT(CASE  WHEN ("O"."ORDER_DATE">=TRUNC(ADD_MONTHS(SYS
              DATE@!,(-2)),'fmmm') AND "O"."ORDER_DATE"<=LAST_DAY(ADD_MONTHS(SYSDATE@!
              ,(-2)))) THEN ROUND(TO_NUMBER("OD"."AMOUNT"*TO_BINARY_DOUBLE("WT"."PRICE
              ")),1) ELSE 0 END )) END >0)
   8 - access("OD"."WOOD_TYPE_ID"="WT"."WOOD_TYPE_ID")
  10 - access("O"."ORDER_ID"="OD"."ORDER_ID")
  11 - access("O"."CLIENT_ID"="C"."CLIENT_ID")
  12 - filter("C"."CLIENT_TYPE"='MEDIUM BUSINESS')
